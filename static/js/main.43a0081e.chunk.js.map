{"version":3,"sources":["actionConstants/employeeActionConstants.js","apis/index.js","actions/employeeAction.js","components/Appbar.js","components/TableHead.js","components/util.js","components/TableToolbar.js","components/EmployeeTable.js","components/ViewEmployee.js","components/CsvTable.js","components/CsvDownloader.js","components/CsvUploader.js","components/UploadEmployee.js","reducers/employeeReducer.js","reducers/rootReducer.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Actions","EMPLOYEES_REQUESTED","EMPLOYEES_RECEIVED","EMPLOYEES_ERROR","CSV_UPLOAD_REQUESTED","CSV_UPLOAD_RECEIVED","CSV_UPLOAD_ERROR","baseUrl","getAllEmployeesBypageApi","pageNumber","pageLimit","employeeName","axios","get","uploadCsvApi","formData","post","headers","getAllEmployeesBypage","dispatch","a","type","response","payload","employeeList","data","error","uploadCsv","success","uploadStatus","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","useDispatch","debounce_fun","_","debounce","searchKey","e","console","log","setSearchKey","className","AppBar","Toolbar","IconButton","edge","aria-label","component","Link","to","style","InputBase","placeholder","input","onChange","event","target","value","inputProps","EnhancedTableHead","props","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","TableHead","boxShadow","TableRow","TableCell","Checkbox","indeterminate","checked","id","numeric","disablePadding","label","map","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","visuallyHidden","descendingComparator","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","useToolbarStyles","paddingRight","highlight","secondary","main","lighten","light","text","primary","dark","flex","paper","marginBottom","table","minWidth","border","clip","margin","overflow","top","EnhancedTableToolbar","clsx","Typography","variant","Tooltip","EmployeeTable","prop","React","useState","setOrder","setOrderBy","selected","setSelected","dense","setDense","rows","Paper","length","TableContainer","Table","aria-labelledby","size","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","name","age","dateOfBirth","date_of_birth","reportingManager","reporting_manager","salary","department","TablePagination","rowsPerPageOptions","count","TotalRows","rowsPerPage","page","currentPage","onChangePage","setData","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","ViewEmployees","this","isLoading","TotalPages","TotalEmployeesCount","totalPages","Component","connect","state","employeeReducer","totalEmployeesCount","CsvTable","setPage","setRowsPerPage","emptyRows","Math","min","colSpan","newPage","Button","button","endIcon","upload","bottom","right","CsvDownloader","dob","rm","slr","dpt","htmlFor","startIcon","href","download","import","CsvUploader","file","setFile","history","useHistory","preventDefault","FormData","append","setTimeout","push","cssClass","inputStyle","inputId","parserOptions","header","dynamicTyping","skipEmptyLines","transformHeader","toLowerCase","replace","onFileLoaded","fileInfo","csv_data","document","getElementById","addEventListener","files","UploadEmployees","csvData","setCsvData","initialState","selectedEmployee","limit","rootReducer","combineReducers","action","total","store","createStore","reducer","applyMiddleware","thunk","App","exact","path","uoloadEmployees","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qXAkBeA,EATC,CACdC,oBAT0B,0BAU1BC,mBATyB,yBAUzBC,gBATsB,sBAUtBC,qBAT2B,2BAU3BC,oBAT0B,0BAU1BC,iBATuB,wB,iBCJnBC,EAAU,2CAGHC,EAA2B,SAACC,EAAYC,EAAWC,GAC9D,OAAOC,IAAMC,IACXN,EACE,2BACAE,EACA,cACAC,EACA,iBACAC,IAIOG,EAAe,SAACC,GAC3B,OAAOH,IAAMI,KAAKT,EAAU,eAAgBQ,EAAU,CACpDE,QAAS,CACP,eAAgB,0BCjBTC,EAAwB,SAACT,EAAYC,GAAgC,IAArBC,EAAoB,uDAAP,GACxE,8CAAO,WAAOQ,GAAP,eAAAC,EAAA,6DACLD,EAAS,CAAEE,KAAMrB,EAAQC,sBADpB,kBAIkBO,EAAyBC,EAAYC,EAAWC,GAJlE,OAICW,EAJD,OAKHH,EAAS,CACPE,KAAMrB,EAAQE,mBACdqB,QAAS,CAAEC,aAAcF,EAASG,QAPjC,gDAUHN,EAAS,CACPE,KAAMrB,EAAQG,gBACduB,MAAO,0DAZN,yDAAP,uDAkBWC,EAAY,SAACZ,GACxB,8CAAO,WAAOI,GAAP,eAAAC,EAAA,6DACLD,EAAS,CAAEE,KAAMrB,EAAQI,uBADpB,kBAGkBU,EAAaC,GAH/B,QAGCO,EAHD,QAIUG,KAAKG,SAElBT,EAAS,CACPE,KAAMrB,EAAQK,oBACdkB,QAAS,CAAEM,aAAcP,EAASG,QARjC,gDAWHN,EAAS,CACPE,KAAMrB,EAAQM,iBACdoB,MAAO,yDAbN,yDAAP,uD,eCVII,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJJ,SAAU,EACVK,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLC,SAAU,WACVC,aAAcZ,EAAMa,MAAMD,aAC1BE,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKf,EAAMgB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BU,WAAYnB,EAAMK,QAAQ,GAC1Be,MAAO,SAGXC,WAAY,CACVC,QAAStB,EAAMK,QAAQ,EAAG,GAC1BkB,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,WAETC,WAAW,aACTP,QAAStB,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAEhCyB,YAAY,cAAD,OAAgB9B,EAAMK,QAAQ,GAA9B,OACX0B,WAAY/B,EAAMgC,YAAYC,OAAO,SACrCb,MAAO,QACNpB,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BW,MAAO,OACP,UAAW,CACTA,MAAO,cAMA,SAASc,IACtB,IAAMC,EAAUrC,IACVX,EAAWiD,cACbC,EAAeC,IAAEC,UAAS,SAACC,GAC7BrD,EAASD,EAAsB,EAAG,EAAGsD,IACrCrD,ED/BwB,SAACqD,GAC3B,8CAAO,WAAOrD,GAAP,SAAAC,EAAA,sDACL,IACED,EAAS,CACPE,KAAM,iBACNE,QAAS,CAAEiD,UAAWA,KAExB,MAAOC,GACNC,QAAQC,IAAI,iDAPV,2CAAP,sDC8BWC,CAAaJ,MACrB,KAMH,OACE,qBAAKK,UAAWV,EAAQlC,KAAxB,SACE,cAAC6C,EAAA,EAAD,CAAQnC,SAAS,SAAjB,SACE,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLJ,UAAWV,EAAQhC,WACnByB,MAAM,UACNsB,aAAW,cAJb,SAME,cAAC,IAAD,MAEF,cAACF,EAAA,EAAD,CACEC,KAAK,QACLE,UAAWC,IACXC,GAAG,IACHC,MAAO,CAAElD,YAAa,KACtBwB,MAAM,UACNsB,aAAW,OANb,wBAUA,cAACF,EAAA,EAAD,CACEC,KAAK,QACLE,UAAWC,IACXC,GAAG,iBACHC,MAAO,CAAElD,YAAa,KACtBwB,MAAM,UACNsB,aAAW,OANb,2BAiBA,sBAAKL,UAAWV,EAAQzB,OAAxB,UACE,qBAAKmC,UAAWV,EAAQd,WAAxB,SACE,cAAC,IAAD,MAEF,cAACkC,EAAA,EAAD,CACEC,YAAY,eACZrB,QAAS,CACPlC,KAAMkC,EAAQR,UACd8B,MAAOtB,EAAQN,YAEjB6B,SArDK,SAACC,GAChBtB,EAAasB,EAAMC,OAAOC,QAqDhBC,WAAY,CAAE,aAAc,sB,0JC1H3B,SAASC,EAAkBC,GACxC,IACE7B,EAOE6B,EAPF7B,QACA8B,EAMED,EANFC,iBACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,QACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,cA+BF,OACE,cAACC,EAAA,EAAD,CAAWjB,MAAO,CAAEkB,UAAW,qBAA/B,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWpD,QAAQ,WAAnB,SACE,cAACqD,EAAA,EAAD,CACEC,cAAeR,EAAc,GAAKA,EAAcC,EAChDQ,QAASR,EAAW,GAAKD,IAAgBC,EACzCX,SAAUO,EACVH,WAAY,CAAE,aAAc,2BAjCpB,CAChB,CAAEgB,GAAI,KAAMC,SAAS,EAAOC,gBAAgB,EAAMC,MAAO,MACzD,CAAEH,GAAI,OAAQC,SAAS,EAAMC,gBAAgB,EAAMC,MAAO,QAC1D,CAAEH,GAAI,MAAOC,SAAS,EAAMC,gBAAgB,EAAOC,MAAO,OAC1D,CACEH,GAAI,cACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,iBAET,CACEH,GAAI,mBACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,qBAET,CAAEH,GAAI,SAAUC,SAAS,EAAMC,gBAAgB,EAAOC,MAAO,UAC7D,CACEH,GAAI,aACJC,SAAS,EACTC,gBAAgB,EAChBC,MAAO,eAeMC,KAAI,SAACC,GAAD,OACb,cAACT,EAAA,EAAD,CAEEU,MAAOD,EAASJ,QAAU,QAAU,OACpCzD,QAAS6D,EAASH,eAAiB,OAAS,UAC5CK,cAAelB,IAAYgB,EAASL,IAAKZ,EAJ3C,SAME,eAACoB,EAAA,EAAD,CACEC,OAAQpB,IAAYgB,EAASL,GAC7BU,UAAWrB,IAAYgB,EAASL,GAAKZ,EAAQ,MAC7CuB,SAlDeC,EAkDYP,EAASL,GAlDR,SAACnB,GACvCW,EAAcX,EAAO+B,KA8Cb,UAKGP,EAASF,MACTd,IAAYgB,EAASL,GACpB,sBAAMjC,UAAWV,EAAQwD,eAAzB,SACa,SAAVzB,EAAmB,oBAAsB,qBAE1C,SAfDiB,EAASL,IA1CE,IAACY,U,wEChBtB,SAASE,GAAqBxG,EAAGyG,EAAG1B,GACzC,OAAI0B,EAAE1B,GAAW/E,EAAE+E,IACT,EAEN0B,EAAE1B,GAAW/E,EAAE+E,GACV,EAEF,EAGF,SAAS2B,GAAc5B,EAAOC,GACnC,MAAiB,SAAVD,EACH,SAAC9E,EAAGyG,GAAJ,OAAUD,GAAqBxG,EAAGyG,EAAG1B,IACrC,SAAC/E,EAAGyG,GAAJ,OAAWD,GAAqBxG,EAAGyG,EAAG1B,IAGrC,SAAS4B,GAAWC,EAAOC,GAChC,IAAMC,EAAiBF,EAAMd,KAAI,SAACiB,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAOrD,OALAF,EAAeG,MAAK,SAACjH,EAAGyG,GACtB,IAAM3B,EAAQ+B,EAAW7G,EAAE,GAAIyG,EAAE,IACjC,OAAc,IAAV3B,EAAoBA,EACjB9E,EAAE,GAAKyG,EAAE,MAEXK,EAAehB,KAAI,SAACiB,GAAD,OAAQA,EAAG,MAGhC,IAAMG,GAAmBvG,aAAW,SAACC,GAAD,MAAY,CACrDC,KAAM,CACJ6B,YAAa9B,EAAMK,QAAQ,GAC3BkG,aAAcvG,EAAMK,QAAQ,IAE9BmG,UACyB,UAAvBxG,EAAMgB,QAAQ3B,KACV,CACEuC,MAAO5B,EAAMgB,QAAQyF,UAAUC,KAC/B5F,gBAAiB6F,YAAQ3G,EAAMgB,QAAQyF,UAAUG,MAAO,MAE1D,CACEhF,MAAO5B,EAAMgB,QAAQ6F,KAAKC,QAC1BhG,gBAAiBd,EAAMgB,QAAQyF,UAAUM,MAEjDzG,MAAO,CACL0G,KAAM,gBAIGlH,GAAYC,aAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJmB,MAAO,QAET6F,MAAO,CACL7F,MAAO,OACP8F,aAAclH,EAAMK,QAAQ,IAE9B8G,MAAO,CACLC,SAAU,KAEZzB,eAAgB,CACd0B,OAAQ,EACRC,KAAM,gBACN/F,OAAQ,EACRgG,QAAS,EACTC,SAAU,SACVlG,QAAS,EACTX,SAAU,WACV8G,IAAK,GACLrG,MAAO,OCNIsG,GAnDc,SAAC1D,GAC5B,IAAM7B,EAAUmE,KACRlC,EAAgBJ,EAAhBI,YAER,OACE,eAACrB,EAAA,EAAD,CACEF,UAAW8E,aAAKxF,EAAQlC,KAAT,eACZkC,EAAQqE,UAAYpC,EAAc,IAFvC,UAKGA,EAAc,EACb,eAACwD,GAAA,EAAD,CACE/E,UAAWV,EAAQ7B,MACnBsB,MAAM,UACNiG,QAAQ,YACR1E,UAAU,MAJZ,UAMGiB,EANH,eASA,cAACwD,GAAA,EAAD,CACE/E,UAAWV,EAAQ7B,MACnBuH,QAAQ,KACR/C,GAAG,aACH3B,UAAU,MAJZ,8BAUDiB,EAAc,EACb,cAAC0D,GAAA,EAAD,CAASxH,MAAM,SAAf,SACE,cAAC0C,EAAA,EAAD,CAAYE,aAAW,SAAvB,SACE,cAAC,KAAD,QAIJ,cAAC4E,GAAA,EAAD,CAASxH,MAAM,cAAf,SACE,cAAC0C,EAAA,EAAD,CAAYE,aAAW,cAAc4B,GAAG,UAAxC,SACE,cAAC,KAAD,YClCG,SAASiD,GAAcC,GACpC,IAAM7F,EAAUrC,KAChB,EAA0BmI,IAAMC,SAAS,OAAzC,mBAAOhE,EAAP,KAAciE,EAAd,KACA,EAA8BF,IAAMC,SAAS,MAA7C,mBAAO/D,EAAP,KAAgBiE,EAAhB,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BL,IAAMC,UAAS,GAAzC,mBAAOK,EAAP,KAAcC,EAAd,KAiDIC,EAAOT,EAAKvI,KAIhB,OACE,sBAAKoD,UAAWV,EAAQlC,KAAxB,UACE,eAACyI,EAAA,EAAD,CAAO7F,UAAWV,EAAQ8E,MAA1B,UACE,cAAC,GAAD,CAAsB7C,YAAaiE,EAASM,SAC5C,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEhG,UAAWV,EAAQgF,MACnB2B,kBAAgB,aAChBC,KAAMR,EAAQ,QAAU,SACxBrF,aAAW,iBAJb,UAME,cAACa,EAAD,CACE5B,QAASA,EACTiC,YAAaiE,EAASM,OACtBzE,MAAOA,EACPC,QAASA,EACTF,iBA7DiB,SAACN,GAC5B,GAAIA,EAAMC,OAAOiB,QAAjB,CACE,IAAMmE,EAAeP,EAAKvD,KAAI,SAAC+D,GAAD,OAAOA,EAAEnE,MACvCwD,EAAYU,QAGdV,EAAY,KAwDFhE,cApEc,SAACX,EAAO+B,GAEhCyC,EADchE,IAAYuB,GAAsB,QAAVxB,EACrB,OAAS,OAC1BkE,EAAW1C,IAkEDrB,SAAUoE,EAAKE,SAEjB,cAACO,EAAA,EAAD,UACGnD,GAAW0C,EAAM3C,GAAc5B,EAAOC,IACpCgF,MAAM,EAAGnB,EAAKtJ,WACdwG,KAAI,SAACkE,EAAKhD,GACT,IA1BItB,EA0BEuE,GA1BFvE,EA0B8BsE,EAAItE,IA1BD,IAA1BuD,EAASiB,QAAQxE,IA2BtByE,EAAO,kCAA8BnD,GAE3C,OACE,eAAC3B,EAAA,EAAD,CACE+E,OAAK,EACL/D,QAAS,SAAC9B,GAAD,OAlET,SAACA,EAAOmB,GAC1B,IAAM2E,EAAgBpB,EAASiB,QAAQxE,GACnC4E,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOtB,EAAUvD,GAChB,IAAlB2E,EACTC,EAAcA,EAAYC,OAAOtB,EAASc,MAAM,IACvCM,IAAkBpB,EAASM,OAAS,EAC7Ce,EAAcA,EAAYC,OAAOtB,EAASc,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBtB,EAASc,MAAM,EAAGM,GAClBpB,EAASc,MAAMM,EAAgB,KAInCnB,EAAYoB,GAiD0BE,CAAYjG,EAAOyF,EAAItE,KAC3C+E,KAAK,WACLC,eAAcT,EACdU,UAAW,EAEX1B,SAAUgB,EAPZ,UASE,cAAC3E,EAAA,EAAD,CAAWpD,QAAQ,WAAnB,SACE,cAACqD,EAAA,EAAD,CACEE,QAASwE,EACTvF,WAAY,CAAE,kBAAmByF,OAGrC,cAAC7E,EAAA,EAAD,CACEvB,UAAU,KACV2B,GAAIyE,EACJS,MAAM,MACN1I,QAAQ,OAJV,SAMG8H,EAAItE,KAEP,cAACJ,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAIa,OAC9B,cAACvF,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAIc,MAC9B,cAACxF,EAAA,EAAD,CAAWU,MAAM,QAAjB,SACGgE,EAAIe,aAAef,EAAIgB,gBAE1B,cAAC1F,EAAA,EAAD,CAAWU,MAAM,QAAjB,SACGgE,EAAIiB,kBAAoBjB,EAAIkB,oBAE/B,cAAC5F,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAImB,SAC9B,cAAC7F,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAIoB,eA1BzBpB,EAAItE,cAiCvB,cAAC2F,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACzCvH,UAAU,MACVwH,MAAO3C,EAAK4C,UACZC,YAAa7C,EAAKtJ,UAClBoM,KAAM9C,EAAK+C,YAAc,EACzBC,aAzFiB,SAACrH,EAAOmH,GAC/B9C,EAAKiD,QAAQH,EAAO,EAAG9C,EAAKtJ,UAAWsJ,EAAKxF,YAyFtC0I,oBAtFwB,SAACvH,GAC/BqE,EAAKiD,QAAQ,EAAGE,SAASxH,EAAMC,OAAOC,MAAO,IAAKmE,EAAKxF,iBAwFrD,cAAC4I,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQzG,QAAS0D,EAAO7E,SAtFb,SAACC,GACzB6E,EAAS7E,EAAMC,OAAOiB,YAsFlBI,MAAM,qB,ICpJRsG,G,4MAKJN,QAAU,SAACxM,EAAYC,GAAgC,IAArBC,EAAoB,uDAAP,GAC7C,EAAKqF,MAAM7E,SAASD,EAAsBT,EAAYC,EAAWC,K,uDALnE,WACE6M,KAAKxH,MAAM7E,SAASD,EAAsB,EAAG,M,oBAO/C,WACE,MASIsM,KAAKxH,MANPxE,GAHF,EACEE,MADF,EAEE+L,UAFF,EAGEjM,cACAkM,EAJF,EAIEA,WACAC,EALF,EAKEA,oBACAZ,EANF,EAMEA,YACArM,EAPF,EAOEA,UACA8D,EARF,EAQEA,UAEF,OACE,cAACuF,GAAD,CACEtI,KAAMD,EACNd,UAAWA,EACXuM,QAASO,KAAKP,QACdW,WAAYF,EACZX,YAAaA,EACbH,UAAWe,EACXnJ,UAAWA,Q,GA5BSyF,IAAM4D,WAgDnBC,gBAdS,SAACC,EAAO/H,GAE9B,MAAO,CACLxE,aAAcuM,EAAMC,gBAAgBxM,aACpCE,MAAOqM,EAAMC,gBAAgBtM,MAC7B+L,UAAWM,EAAMC,gBAAgBP,UACjCC,WAAYK,EAAMC,gBAAgBJ,WAClCD,oBAAqBI,EAAMC,gBAAgBC,oBAC3ClB,YAAagB,EAAMC,gBAAgBjB,YACnCrM,UAAWqN,EAAMC,gBAAgBtN,UACjC8D,UAAWuJ,EAAMC,gBAAgBxJ,aAItBsJ,CAAyBP,I,8BCrCzB,SAASW,GAASlE,GAC/B,IAAM7F,EAAUrC,KAChB,EAA0BmI,IAAMC,SAAS,OAAzC,mBAAOhE,EAAP,KAAciE,EAAd,KACA,EAA8BF,IAAMC,SAAS,MAA7C,mBAAO/D,EAAP,KAAgBiE,EAAhB,KACA,EAAgCH,IAAMC,SAAS,IAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBL,IAAMC,SAAS,GAAvC,mBAAO4C,EAAP,KAAaqB,EAAb,KACA,EAA0BlE,IAAMC,UAAS,GAAzC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAsCP,IAAMC,SAAS,GAArD,mBAAO2C,EAAP,KAAoBuB,EAApB,KAmDI3D,EAAOT,EAAKvI,KAWV4M,EACJxB,EAAcyB,KAAKC,IAAI1B,EAAapC,EAAKE,OAASmC,EAAOD,GAE3D,OACE,sBAAKhI,UAAWV,EAAQlC,KAAxB,UACE,eAACyI,EAAA,EAAD,CAAO7F,UAAWV,EAAQ8E,MAA1B,UACE,cAAC,GAAD,CAAsB7C,YAAaiE,EAASM,SAC5C,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACEhG,UAAWV,EAAQgF,MACnB2B,kBAAgB,aAChBC,KAAMR,EAAQ,QAAU,SACxBrF,aAAW,iBAJb,UAME,cAACa,EAAD,CACE5B,QAASA,EACTiC,YAAaiE,EAASM,OACtBzE,MAAOA,EACPC,QAASA,EACTF,iBAxEiB,SAACN,GAC5B,GAAIA,EAAMC,OAAOiB,QAAjB,CACE,IAAMmE,EAAeP,EAAKvD,KAAI,SAAC+D,GAAD,OAAOA,EAAEnE,MACvCwD,EAAYU,QAGdV,EAAY,KAmEFhE,cAhFc,SAACX,EAAO+B,GAChChD,QAAQC,IAAI,mBAAqB+C,GAEjCyC,EADchE,IAAYuB,GAAsB,QAAVxB,EACrB,OAAS,OAC1BkE,EAAW1C,IA6EDrB,SAAUoE,EAAKE,SAEjB,eAACO,EAAA,EAAD,WACGnD,GAAW0C,EAAM3C,GAAc5B,EAAOC,IACpCgF,MAAM2B,EAAOD,EAAaC,EAAOD,EAAcA,GAC/C3F,KAAI,SAACkE,EAAKhD,GACT,IA7BItB,EA6BEuE,GA7BFvE,EA6B8BsE,EAAItE,IA7BD,IAA1BuD,EAASiB,QAAQxE,IA8BtByE,EAAO,kCAA8BnD,GAE3C,OACE,eAAC3B,EAAA,EAAD,CACE+E,OAAK,EACL/D,QAAS,SAAC9B,GAAD,OA7ET,SAACA,EAAOmB,GAC1B,IAAM2E,EAAgBpB,EAASiB,QAAQxE,GACnC4E,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYC,OAAOtB,EAAUvD,GAChB,IAAlB2E,EACTC,EAAcA,EAAYC,OAAOtB,EAASc,MAAM,IACvCM,IAAkBpB,EAASM,OAAS,EAC7Ce,EAAcA,EAAYC,OAAOtB,EAASc,MAAM,GAAI,IAC3CM,EAAgB,IACzBC,EAAcA,EAAYC,OACxBtB,EAASc,MAAM,EAAGM,GAClBpB,EAASc,MAAMM,EAAgB,KAInCnB,EAAYoB,GA4D0BE,CAAYjG,EAAOyF,EAAItE,KAC3C+E,KAAK,WACLC,eAAcT,EACdU,UAAW,EAEX1B,SAAUgB,EAPZ,UASE,cAAC3E,EAAA,EAAD,CAAWpD,QAAQ,WAAnB,SACE,cAACqD,EAAA,EAAD,CACEE,QAASwE,EACTvF,WAAY,CAAE,kBAAmByF,OAGrC,cAAC7E,EAAA,EAAD,CACEvB,UAAU,KACV2B,GAAIyE,EACJS,MAAM,MACN1I,QAAQ,OAJV,SAMG8H,EAAItE,KAGP,cAACJ,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAIa,OAC9B,cAACvF,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAIc,MAC9B,cAACxF,EAAA,EAAD,CAAWU,MAAM,QAAjB,SACGgE,EAAIe,aAAef,EAAIgB,gBAE1B,cAAC1F,EAAA,EAAD,CAAWU,MAAM,QAAjB,SACGgE,EAAIiB,kBAAoBjB,EAAIkB,oBAE/B,cAAC5F,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAImB,SAC9B,cAAC7F,EAAA,EAAD,CAAWU,MAAM,QAAjB,SAA0BgE,EAAIoB,eA3BzBpB,EAAItE,OA+BhBuH,EAAY,GACX,cAAC5H,EAAA,EAAD,CAAUnB,MAAO,CAAE/B,QAASgH,EAAQ,GAAK,IAAM8D,GAA/C,SACE,cAAC3H,EAAA,EAAD,CAAW8H,QAAS,cAM9B,cAAC/B,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BvH,UAAU,MACVwH,MAAOlC,EAAKE,OACZkC,YAAaA,EACbC,KAAMA,EACNE,aA1GiB,SAACrH,EAAO8I,GAC/BN,EAAQM,IA0GFvB,oBAvGwB,SAACvH,GAC/ByI,EAAejB,SAASxH,EAAMC,OAAOC,MAAO,KAC5CsI,EAAQ,SAyGN,cAACf,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAQzG,QAAS0D,EAAO7E,SAvGb,SAACC,GACzB6E,EAAS7E,EAAMC,OAAOiB,YAuGlBI,MAAM,kBAER,cAACyH,GAAA,EAAD,CACE7E,QAAQ,YACRjG,MAAM,UACN6D,QAvGa,WACjB/C,QAAQC,IAAI,uBACZ8F,EAAKE,OAAS,EACdR,EAAkB,QAATjE,EAAkB,MAAQ,QACnCkI,EAAe,IAoGXvJ,UAAWV,EAAQwK,OACnBC,QAAS,cAAC,KAAD,IALX,sB,gEC5KA9M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC6M,OAAQ,CACJlM,SAAU,QACVmM,OAAQ9M,EAAMK,QAAQ,IACtB0M,MAAO/M,EAAMK,QAAQ,SA2Cd2M,GAlCO,WAWF,aACVlI,GAAI,IAAKmF,KAAM,QAASC,IAAK,yBAA2B+C,IAAK,YAAaC,GAAI,KAAKC,IAAK,KAAKC,IAAK,OADzF,MACoG,MAXnH,IAaQjL,EAAUrC,KAChB,OAEE,8BAGI,uBAAOuN,QAAQ,OAAf,SAEA,cAACX,GAAA,EAAD,CAAQ7E,QAAQ,YAAYjG,MAAM,UAAUuB,UAAU,OAAON,UAAWV,EAAQ0K,OAAQS,UAAW,cAAC,KAAD,IAAnG,SACA,mBAAGhK,MAAO,CAAC1B,MAAM,SAAU2L,KAAK,aAAaC,SAAS,aAAtD,+B,SC/BN1N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyN,OAAQ,CACN9M,SAAU,QACVmM,OAAQ9M,EAAMK,QAAQ,IACtB0M,MAAO/M,EAAMK,QAAQ,IAGvBwM,OAAQ,CACNlM,SAAU,QACVmM,OAAQ9M,EAAMK,QAAQ,IACtB0M,MAAO/M,EAAMK,QAAQ,SAwEVqN,GApEK,SAAC1F,GACnB,IAAM7I,EAAWiD,cAGXD,EAAUrC,KAChB,EAAwBoI,mBAAS,IAAjC,mBAAOyF,EAAP,KAAaC,EAAb,KACMC,EAAUC,eAEVjB,EAAM,uCAAG,WAAOpK,GAAP,eAAArD,EAAA,sDACbqD,EAAEsL,kBACIhP,EAAW,IAAIiP,UACZC,OAAO,OAAQN,GACxBxO,EAASQ,EAAUZ,IACnBmP,YAAW,kBAAIL,EAAQM,KAAK,oBAAkB,KALjC,2CAAH,sDAsBZ,OACE,gCACE,cAAC,KAAD,CACEC,SAAS,kBACTC,WAAY,CAAE9N,QAAS,QACvB+N,QAAQ,kBACRC,cAbmB,CACvBC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,gBAAiB,SAACH,GAAD,OAAYA,EAAOI,cAAcC,QAAQ,MAAO,OAU7DC,aAAc,SAACrP,EAAMsP,GACnB/G,EAAKgH,SAASvP,MAGlB,uBAAO4N,QAAQ,kBAAf,SACE,cAACX,GAAA,EAAD,CACE7E,QAAQ,YACRjG,MAAM,UACN6D,QA5BS,SAAChD,GACAwM,SAASC,eAAe,mBAChCC,iBAAiB,UAAU,SAACxL,GAClCiK,EAAQjK,EAAMC,OAAOwL,MAAM,QA0BvBjM,UAAU,OACVN,UAAWV,EAAQsL,OACnBH,UAAW,cAAC,KAAD,IANb,0BAWF,cAACZ,GAAA,EAAD,CACE7E,QAAQ,YACRjG,MAAM,UACN6D,QAASoH,EACT1J,UAAU,OACVN,UAAWV,EAAQ0K,OACnBS,UAAW,cAAC,KAAD,IANb,wBAUA,cAAC,GAAD,QCjES+B,GAjBS,WACtB,MAA8BnH,mBAAS,IAAvC,mBAAOoH,EAAP,KAAgBC,EAAhB,KAOA,OAFA7M,QAAQC,IAAI2M,GAGV,sBAAKzM,UAAU,MAAf,UACE,cAAC,GAAD,CAAamM,SARE,SAACvP,GAClB8P,EAAW9P,MAQT,cAACyM,GAAD,CAAUzM,KAAM6P,IAChB,cAAC,GAAD,Q,kBCfAE,GAAe,CACnBhQ,aAAc,GACdiM,WAAW,EACXgE,iBAAkB,GAClB5P,cAAc,EACd+L,WAAY,EACZK,oBAAqB,EACrBlB,YAAa,EACb2E,MAAO,EACPhQ,MAAO,GACP8C,UAAU,ICJGmN,GAJKC,aAAgB,CAChC5D,gBDUW,WAAmC,IAAlCD,EAAiC,uDAAzByD,GAAcK,EAAW,uCAC/C,OAAQA,EAAOxQ,MACb,KAAKrB,EAAQC,oBACX,OAAO,6BACF8N,GADL,IAEErM,MAAO,GACPF,aAAc,GACdiM,WAAW,IAEf,KAAKzN,EAAQE,mBACX,OAAO,6BACF6N,GADL,IAEErM,MAAO,GACPF,aAAcqQ,EAAOtQ,QAAQC,aAAaC,MAAQ,GAClDgQ,iBAAkBI,EAAOtQ,QAAQC,aAAaC,KAAK,IAAM,GACzDmM,WAAYiE,EAAOtQ,QAAQC,aAAaoM,WACxCK,oBAAqB4D,EAAOtQ,QAAQC,aAAasQ,MACjD/E,YAAa8E,EAAOtQ,QAAQC,aAAauL,YACzCrM,UAAWmR,EAAOtQ,QAAQC,aAAakQ,MACvCjE,WAAW,IAEf,KAAKzN,EAAQG,gBACX,OAAO,6BACF4N,GADL,IAEErM,MACEmQ,EAAOnQ,OAAS,qDAClB+L,WAAW,IAEf,KAAKzN,EAAQI,qBACX,OAAO,6BACF2N,GADL,IAEErM,MAAOmQ,EAAOnQ,OAAS,GACvBG,cAAc,EACd4L,WAAW,IAEf,KAAKzN,EAAQK,oBACX,OAAO,6BACF0N,GADL,IAEErM,MAAO,GACPG,aAAcgQ,EAAOtQ,QAAQM,aAAaD,UAAW,EACrD6L,WAAW,IAEf,KAAKzN,EAAQM,iBACX,OAAO,6BACFyN,GADL,IAEErM,MAAOmQ,EAAOnQ,OAAS,2CACvB+L,WAAW,IAGf,IAAK,iBACH,OAAO,6BACFM,GADL,IAEErM,MAAOmQ,EAAOnQ,OAAS,2CACvB8C,UAAWqN,EAAOtQ,QAAQiD,WAAa,KAE3C,QACE,OAAOuJ,M,UEhEEgE,GAFDC,aAAYC,GAASC,aAAgBC,OC0BpCC,OAhBf,WACE,OACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACA,cAAC,IAAD,UACE,sBAAKzM,MAAO,CAAEpD,SAAU,GAAxB,UACE,cAACgC,EAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,CAAOmO,OAAK,EAACC,KAAK,IAAInN,UAAWoN,KACjC,cAAC,KAAD,CAAOD,KAAK,iBAAiBnN,UAAWoI,gBCXnCiF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFlC,SAASC,eAAe,SAM1BsB,O","file":"static/js/main.43a0081e.chunk.js","sourcesContent":["\r\nconst EMPLOYEES_REQUESTED = 'all/EMPLOYEES_REQUESTED';\r\nconst EMPLOYEES_RECEIVED = 'all/EMPLOYESS_RECEIVED';\r\nconst EMPLOYEES_ERROR = 'all/EMPLOYEES_ERROR';\r\nconst CSV_UPLOAD_REQUESTED = 'one/CSV_UPLOAD_REQUESTED';\r\nconst CSV_UPLOAD_RECEIVED = 'one/CSV_UPLOAD_RECEIVED';\r\nconst CSV_UPLOAD_ERROR = 'one/CSV_UPLOAD_ERROR';\r\n\r\n\r\nconst Actions = {\r\n  EMPLOYEES_REQUESTED,\r\n  EMPLOYEES_RECEIVED,\r\n  EMPLOYEES_ERROR,\r\n  CSV_UPLOAD_REQUESTED,\r\n  CSV_UPLOAD_RECEIVED,\r\n  CSV_UPLOAD_ERROR\r\n};\r\n\r\nexport default Actions;\r\n\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://safe-csv-uploader.herokuapp.com/\";\r\n// const baseUrl = \"http://localhost:5000/\";\r\n\r\nexport const getAllEmployeesBypageApi = (pageNumber, pageLimit, employeeName) => {\r\n  return axios.get(\r\n    baseUrl +\r\n      \"api/employee?pageNumber=\" +\r\n      pageNumber +\r\n      \"&pageLimit=\" +\r\n      pageLimit + \r\n      \"&employeeName=\" + \r\n      employeeName\r\n  );\r\n};\r\n\r\nexport const uploadCsvApi = (formData) => {\r\n  return axios.post(baseUrl + \"api/employee\", formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n","import Actions from \"../actionConstants/employeeActionConstants\";\r\nimport { getAllEmployeesBypageApi, uploadCsvApi } from \"../apis\";\r\n\r\nexport const getAllEmployeesBypage = (pageNumber, pageLimit, employeeName='') => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Actions.EMPLOYEES_REQUESTED });\r\n\r\n    try {\r\n      let response = await getAllEmployeesBypageApi(pageNumber, pageLimit, employeeName);\r\n      dispatch({\r\n        type: Actions.EMPLOYEES_RECEIVED,\r\n        payload: { employeeList: response.data },\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Actions.EMPLOYEES_ERROR,\r\n        error: \"API to get employee list is failed with error : \" + e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const uploadCsv = (formData) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: Actions.CSV_UPLOAD_REQUESTED });\r\n    try {\r\n      let response = await uploadCsvApi(formData);\r\n      if (response.data.success)\r\n        // window.location = window.location.origin + \"/#/viewEmployees\";\r\n      dispatch({\r\n        type: Actions.CSV_UPLOAD_RECEIVED,\r\n        payload: { uploadStatus: response.data },\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Actions.CSV_UPLOAD_ERROR,\r\n        error: \"API to upload employees is failed with error : \" + e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setSearchKey = (searchKey) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: 'SET_SEARCH_KEY',\r\n        payload: { searchKey: searchKey },\r\n      });\r\n    } catch (e) {\r\n       console.log('something went wrong while setting search key')\r\n    }\r\n  };\r\n};\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { getAllEmployeesBypage, setSearchKey } from \"../actions/employeeAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"12ch\",\r\n      \"&:focus\": {\r\n        width: \"20ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  var debounce_fun = _.debounce((searchKey) => {\r\n    dispatch(getAllEmployeesBypage(1, 5, searchKey));\r\n    dispatch(setSearchKey(searchKey));\r\n  }, 1000);\r\n\r\n  const searchMe = (event) => {\r\n    debounce_fun(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            edge=\"start\"\r\n            component={Link}\r\n            to=\"/\"\r\n            style={{ marginRight: \"2\" }}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            Upload CSV\r\n          </IconButton>\r\n          <IconButton\r\n            edge=\"start\"\r\n            component={Link}\r\n            to=\"/viewEmployees\"\r\n            style={{ marginRight: \"2\" }}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            viewEmployees\r\n          </IconButton>\r\n          {/* <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            CSV-Uploader\r\n          </Typography> */}\r\n          {/* <CsvUploader  \r\n              \r\n          /> */}\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              onChange={searchMe}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  const headCells = [\r\n    { id: \"id\", numeric: false, disablePadding: true, label: \"Id\" },\r\n    { id: \"name\", numeric: true, disablePadding: true, label: \"Name\" },\r\n    { id: \"age\", numeric: true, disablePadding: false, label: \"Age\" },\r\n    {\r\n      id: \"dateOfBirth\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Date Of Birth\",\r\n    },\r\n    {\r\n      id: \"reportingManager\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Reporting Manager\",\r\n    },\r\n    { id: \"salary\", numeric: true, disablePadding: false, label: \"Salary\" },\r\n    {\r\n      id: \"department\",\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: \"Department\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TableHead style={{ boxShadow: \"10px 10px #f2f2f2\" }}>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport function descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nexport function stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport const useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nimport { useToolbarStyles } from \"./util\";\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Employee Details\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\" id=\"testing\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableToolbar;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport React from \"react\";\r\nimport EnhancedTableHead from \"./TableHead\";\r\nimport EnhancedTableToolbar from \"./TableToolbar\";\r\nimport { getComparator, stableSort, useStyles } from \"./util\";\r\n\r\nexport default function EmployeeTable(prop) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"id\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(false);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    prop.setData(page + 1, prop.pageLimit, prop.searchKey);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    prop.setData(1, parseInt(event.target.value, 10), prop.searchKey);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  let rows = prop.data;\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(0, prop.pageLimit)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.name}</TableCell>\r\n                      <TableCell align=\"right\">{row.age}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.dateOfBirth || row.date_of_birth}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.reportingManager || row.reporting_manager}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.salary}</TableCell>\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100, 200]}\r\n          component=\"div\"\r\n          count={prop.TotalRows}\r\n          rowsPerPage={prop.pageLimit}\r\n          page={prop.currentPage - 1}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport EmployeeTable from \"./EmployeeTable\";\r\nimport React from \"react\";\r\nimport { getAllEmployeesBypage } from \"../actions/employeeAction\";\r\nimport _ from \"lodash\";\r\n\r\nclass ViewEmployees extends React.Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getAllEmployeesBypage(1, 5));\r\n  }\r\n\r\n  setData = (pageNumber, pageLimit, employeeName='') => {\r\n    this.props.dispatch(getAllEmployeesBypage(pageNumber, pageLimit, employeeName));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      error,\r\n      isLoading,\r\n      employeeList,\r\n      TotalPages,\r\n      TotalEmployeesCount,\r\n      currentPage,\r\n      pageLimit,\r\n      searchKey\r\n    } = this.props;\r\n    return (\r\n      <EmployeeTable\r\n        data={employeeList}\r\n        pageLimit={pageLimit}\r\n        setData={this.setData}\r\n        totalPages={TotalPages}\r\n        currentPage={currentPage}\r\n        TotalRows={TotalEmployeesCount}\r\n        searchKey={searchKey}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n\r\n  return {\r\n    employeeList: state.employeeReducer.employeeList,\r\n    error: state.employeeReducer.error,\r\n    isLoading: state.employeeReducer.isLoading,\r\n    TotalPages: state.employeeReducer.totalPages,\r\n    TotalEmployeesCount: state.employeeReducer.totalEmployeesCount,\r\n    currentPage: state.employeeReducer.currentPage,\r\n    pageLimit: state.employeeReducer.pageLimit,\r\n    searchKey: state.employeeReducer.searchKey\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewEmployees);\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport React from \"react\";\r\nimport EnhancedTableHead from \"./TableHead\";\r\nimport EnhancedTableToolbar from \"./TableToolbar\";\r\nimport { getComparator, stableSort, useStyles } from \"./util\";\r\n\r\nexport default function CsvTable(prop) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"id\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    console.log(\"property........\" + property);\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, id) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  let rows = prop.data;\r\n\r\n  const clearTable = () => {\r\n    console.log(\"clear table clicked\");\r\n    rows.length = 0;\r\n    setOrder(order == \"desc\" ? \"asc\" : \"desc\");\r\n    setRowsPerPage(5);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ \"aria-labelledby\": labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.id}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"right\">{row.name}</TableCell>\r\n                      <TableCell align=\"right\">{row.age}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.dateOfBirth || row.date_of_birth}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {row.reportingManager || row.reporting_manager}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.salary}</TableCell>\r\n                      <TableCell align=\"right\">{row.department}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={clearTable}\r\n        className={classes.button}\r\n        endIcon={<ClearIcon />}\r\n      >\r\n        clear\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    upload: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(22),\r\n        right: theme.spacing(50),\r\n        \r\n        // right: theme.spacing(2),\r\n        // top: theme.spacing(14),\r\n        \r\n    },\r\n \r\n  }));\r\n\r\nconst CsvDownloader = () =>{\r\n    const headers = [\r\n        { label: \"Id\", key: \"id\" },\r\n        { label: \"Name\", key: \"name\" },\r\n        { label: \"Age\", key: \"age\" },\r\n        { label: \"Date of birth\", key: \"dob\" },\r\n        { label: \"Reporting Manager\", key: \"rm\" },\r\n        { label: \"Salary\", key: \"slr\" },\r\n        { label: \"Department\", key: \"dpt\" }\r\n      ];\r\n       \r\n      const data = [\r\n        { id: \"1\", name: \"Javed\", age: \"javedaktar73@gmail.com\",  dob: \"31/5/1965\", rm: \"Jd\",slr: \"20\",dpt: \"CSE\",age: \"50\"}\r\n      ];\r\n      const classes = useStyles();\r\n      return(\r\n\r\n        <div   >\r\n\r\n \r\n            <label htmlFor=\"file\">\r\n\r\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" className={classes.upload} startIcon={<CloudDownloadIcon />}>\r\n            <a style={{color:'white'}} href=\"sample.csv\" download=\"sample.csv\">Sample CSV</a>\r\n\t\t\t      </Button>\r\n     \r\n        </label>\r\n        </div>\r\n\r\n\r\n      )\r\n      \r\n}\r\n\r\nexport default CsvDownloader","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CSVReader from \"react-csv-reader\";\r\nimport BackupIcon from \"@material-ui/icons/Backup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CsvDownloader from \"./CsvDownloader\";\r\nimport { uploadCsv } from \"../actions/employeeAction\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  import: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(22),\r\n    right: theme.spacing(2),\r\n  },\r\n\r\n  upload: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(22),\r\n    right: theme.spacing(26),\r\n  },\r\n}));\r\n\r\nconst CsvUploader = (prop) => {\r\n  const dispatch = useDispatch();\r\n  // var uploadStatus = useSelector((state) => state.employeeReducer.uploadStatus);\r\n\r\n  const classes = useStyles();\r\n  const [file, setFile] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const upload = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    dispatch(uploadCsv(formData));\r\n    setTimeout(()=>history.push(\"/viewEmployees\"),1000)\r\n    \r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const element = document.getElementById(\"import-csv-file\");\r\n    element.addEventListener(\"change\", (event) => {\r\n      setFile(event.target.files[0]);\r\n    });\r\n  };\r\n  const papaparseOptions = {\r\n    header: true,\r\n    dynamicTyping: true,\r\n    skipEmptyLines: true,\r\n    transformHeader: (header) => header.toLowerCase().replace(/\\W/g, \"_\"),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CSVReader\r\n        cssClass=\"react-csv-input\"\r\n        inputStyle={{ display: \"none\" }}\r\n        inputId=\"import-csv-file\"\r\n        parserOptions={papaparseOptions}\r\n        onFileLoaded={(data, fileInfo) => {\r\n          prop.csv_data(data);\r\n        }}\r\n      />\r\n      <label htmlFor=\"import-csv-file\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={onChange}\r\n          component=\"span\"\r\n          className={classes.import}\r\n          startIcon={<BackupIcon />}\r\n        >\r\n          Import CSV\r\n        </Button>\r\n      </label>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={upload}\r\n        component=\"span\"\r\n        className={classes.upload}\r\n        startIcon={<BackupIcon />}\r\n      >\r\n        Upload CSV\r\n      </Button>\r\n      <CsvDownloader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CsvUploader;\r\n","import React, { useState } from \"react\";\r\nimport CsvTable from \"./CsvTable\";\r\nimport CsvUploader from \"./CsvUploader\";\r\nimport CsvDownloader from \"./CsvDownloader\";\r\n\r\nconst UploadEmployees = () => {\r\n  const [csvData, setCsvData] = useState([]);\r\n  const getCsvData = (data) => {\r\n    setCsvData(data);\r\n  };\r\n\r\n  console.log(csvData);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CsvUploader csv_data={getCsvData} />\r\n      <CsvTable data={csvData} />\r\n      <CsvDownloader />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadEmployees;\r\n","import Actions from \"../actionConstants/employeeActionConstants\";\r\n\r\nconst initialState = {\r\n  employeeList: [],\r\n  isLoading: false,\r\n  selectedEmployee: {},\r\n  uploadStatus: false,\r\n  totalPages: 0,\r\n  totalEmployeesCount: 0,\r\n  currentPage: 0,\r\n  limit: 5,\r\n  error: \"\",\r\n  searchKey:''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case Actions.EMPLOYEES_REQUESTED:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        employeeList: [],\r\n        isLoading: true,\r\n      };\r\n    case Actions.EMPLOYEES_RECEIVED:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        employeeList: action.payload.employeeList.data || [],\r\n        selectedEmployee: action.payload.employeeList.data[0] || {},\r\n        totalPages: action.payload.employeeList.totalPages,\r\n        totalEmployeesCount: action.payload.employeeList.total,\r\n        currentPage: action.payload.employeeList.currentPage,\r\n        pageLimit: action.payload.employeeList.limit,\r\n        isLoading: false,\r\n      };\r\n    case Actions.EMPLOYEES_ERROR:\r\n      return {\r\n        ...state,\r\n        error:\r\n          action.error || \"Something went wrong while fetching employees list\",\r\n        isLoading: false,\r\n      };\r\n    case Actions.CSV_UPLOAD_REQUESTED:\r\n      return {\r\n        ...state,\r\n        error: action.error || \"\",\r\n        uploadStatus: false,\r\n        isLoading: false,\r\n      };\r\n    case Actions.CSV_UPLOAD_RECEIVED:\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        uploadStatus: action.payload.uploadStatus.success || false,\r\n        isLoading: false,\r\n      };\r\n    case Actions.CSV_UPLOAD_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error || \"Something went wrong while uploading csv\",\r\n        isLoading: false,\r\n      };\r\n\r\n    case 'SET_SEARCH_KEY':\r\n      return {\r\n        ...state,\r\n        error: action.error || \"Something went wrong while uploading csv\",\r\n        searchKey: action.payload.searchKey || ''\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport employeeReducer from './employeeReducer';\r\n \r\n\r\nconst rootReducer = combineReducers({\r\n    employeeReducer: employeeReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore,applyMiddleware  } from 'redux';\r\nimport reducer from './reducers/rootReducer'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from \"react\";\nimport \"./App.css\";\nimport SearchAppBar from \"./components/Appbar\";\nimport ViewEmployees from \"./components/ViewEmployee\";\nimport uoloadEmployees from \"./components/UploadEmployee\";\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nimport {\n  Switch,\n  Route,\n  HashRouter,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Provider store={store}> \n    <HashRouter>\n      <div style={{ flexGrow: 1 }}>\n        <SearchAppBar />\n        <Switch>\n          <Route exact path=\"/\" component={uoloadEmployees} />\n          <Route path=\"/viewEmployees\" component={ViewEmployees} />\n        </Switch>\n      </div>\n    </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}